[tox]
envlist = py{39,310,311,312,313}
minversion = 3.2
tox_pip_extensions_ext_venv_update = true
skip_missing_interpreters = true

[testenv]
extras =
    server
    ec2spotmanager
    taskmanager
    test
usedevelop = true
commands = pytest -v --cov="{toxinidir}" --cov-report term-missing {posargs}
install_command = python -m pip install -c "{toxinidir}/requirements.txt" {opts} {packages}
passenv =
    TOXENV
    CI
    TRAVIS
    TRAVIS_*
    CODECOV_*
    TWINE_*

[testenv:py{312,313}]
extras =
    test

[testenv:update-reqs]
skip_install = true
basepython = python3.9
deps =
    pip-tools
install_command = python -m pip install {opts} {packages}
commands =
    python -c "from pathlib import Path; p=Path('requirements.txt'); p.unlink(missing_ok=True)"
    pip-compile --extra docker --extra server --extra test --extra taskmanager --extra ec2spotmanager --strip-extras -q
    python -c "from pathlib import Path; import re; p=Path('requirements.txt'); p.write_text(re.sub('(?m)^(fuzzing-decision)', '\# \\\\1', p.read_text()))"

[testenv:codecov]
skip_install = true
deps =
    coverage[toml]
commands =
    codecov
allowlist_externals =
    codecov

[testenv:pypi]
skip_install = true
deps =
    build
    twine
    wheel
commands =
    python -m build
    bash repack.sh
    twine upload --verbose --skip-existing dist/*
allowlist_externals =
    bash

[flake8]
# E203, W503, and W504 are all black compat
ignore =
    E203
    W503
enable =
    W504
max-line-length = 88
show-source = true
