version: 1
policy:
  pullRequests: collaborators
tasks:
  $let:
    user: ${event.sender.login}

    fetch_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}

    fetch_ref:
      $if: 'tasks_for == "github-pull-request"'
      then: "pull/${event.number}/head"
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.ref}
        else: "tags/${event.release.tag_name}"

    http_repo:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.base.repo.clone_url}
      else: ${event.repository.clone_url}

    codecov_secret_url:
      http://taskcluster/secrets/v1/secret/project/fuzzing/codecov-fuzzmanager

  in:
    $if: 'tasks_for in ["github-pull-request", "github-push"]'
    then:
      $map:
        - {pyver: 2.7, toxenv: 'py27', name: 'tests python 2.7 django 1.x'}
        - {pyver: 3.5, toxenv: 'py35', name: 'tests python 3.5 django 2.x'}
        - {pyver: 3.6, toxenv: 'py36', name: 'tests python 3.6 django 2.x'}
        - {pyver: 3.7, toxenv: 'py37', name: 'tests python 3.7 django 2.x'}
        - {pyver: 3.8, toxenv: 'py38', name: 'tests python 3.8 django 2.x'}
      each(build):
        provisionerId: proj-fuzzing
        workerType: ci
        created: {$fromNow: ''}
        deadline: {$fromNow: '1 hour'}
        scopes: [secrets:get:project/fuzzing/codecov-fuzzmanager]
        payload:
          maxRunTime: 3600
          image: python:${build.pyver}-slim
          features:
            taskclusterProxy: true
          command:
            - /bin/bash
            - '--login'
            - '-x'
            - '-c'
            - >-
              echo "[global]\ndisable-pip-version-check = true\nno-cache-dir = false\n" > /etc/pip.conf &&
              function read_token () {
                echo "export $1=" > token.txt;
                curl -L $2 | jshon -e secret -e token -u >> token.txt;
                cat token.txt | tr -d '\n' > token.sh;
                . token.sh;
                rm token.txt token.sh
              } &&
              apt-get update -qq &&
              apt-get install -y -qq --no-install-recommends --no-install-suggests build-essential curl git jshon mercurial &&
              pip -q install tox &&
              cd ~ &&
              read_token CODECOV_TOKEN ${codecov_secret_url} &&
              git init repo &&
              cd repo &&
              git remote add origin ${http_repo} &&
              git fetch -q --depth=1 origin "${fetch_ref}" &&
              git -c advice.detachedHead=false checkout ${fetch_rev} &&
              export TOXENV=${build.toxenv} &&
              tox &&
              tox -e codecov
        metadata:
          name: FuzzManager ${build.name}
          description: FuzzManager ${build.name}
          owner: '${event.sender.login}@users.noreply.github.com'
          source: ${http_repo}/raw/${fetch_rev}/.taskcluster.yml
