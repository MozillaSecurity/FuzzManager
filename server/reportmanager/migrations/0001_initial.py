# Generated by Django 4.2.13 on 2024-09-11 23:00

import django.core.files.storage
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
from django.conf import settings
from django.db import migrations, models

import reportmanager.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bucket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("signature", models.TextField()),
                ("optimizedSignature", models.TextField(blank=True, null=True)),
                ("shortDescription", models.CharField(blank=True, max_length=1023)),
                ("frequent", models.BooleanField(default=False)),
                ("permanent", models.BooleanField(default=False)),
                ("doNotReduce", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="BucketHit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "begin",
                    models.DateTimeField(
                        default=reportmanager.models.buckethit_default_range_begin
                    ),
                ),
                ("count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="BucketWatch",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lastReport", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Bug",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("externalId", models.CharField(blank=True, max_length=255)),
                ("closed", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="BugProvider",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classname", models.CharField(max_length=255)),
                ("hostname", models.CharField(max_length=255)),
                ("urlTemplate", models.CharField(max_length=1023)),
            ],
        ),
        migrations.CreateModel(
            name="BugzillaTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mode",
                    enumfields.fields.EnumField(
                        enum=reportmanager.models.BugzillaTemplateMode, max_length=30
                    ),
                ),
                ("name", models.TextField()),
                ("product", models.TextField()),
                ("component", models.TextField()),
                ("summary", models.TextField(blank=True)),
                ("version", models.TextField()),
                ("description", models.TextField(blank=True)),
                ("whiteboard", models.TextField(blank=True)),
                ("keywords", models.TextField(blank=True)),
                ("op_sys", models.TextField(blank=True)),
                ("platform", models.TextField(blank=True)),
                ("priority", models.TextField(blank=True)),
                ("severity", models.TextField(blank=True)),
                ("alias", models.TextField(blank=True)),
                ("cc", models.TextField(blank=True)),
                ("assigned_to", models.TextField(blank=True)),
                ("qa_contact", models.TextField(blank=True)),
                ("target_milestone", models.TextField(blank=True)),
                ("attrs", models.TextField(blank=True)),
                ("security", models.BooleanField(default=False)),
                ("security_group", models.TextField(blank=True)),
                ("comment", models.TextField(blank=True)),
                ("testcase_filename", models.TextField(blank=True)),
                ("blocks", models.TextField(blank=True)),
                ("dependson", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="OS",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63)),
                ("version", models.CharField(blank=True, max_length=127, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63)),
                ("version", models.CharField(blank=True, max_length=127, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "test",
                    models.FileField(
                        storage=django.core.files.storage.FileSystemStorage(
                            location="/home/truber/src/m/WebCompatManager/server"
                        ),
                        upload_to="tests",
                    ),
                ),
                ("size", models.IntegerField(default=0)),
                ("quality", models.IntegerField(default=0)),
                ("isBinary", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Tool",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("defaultTemplateId", models.IntegerField(default=0)),
                ("defaultProviderId", models.IntegerField(default=1)),
                ("restricted", models.BooleanField(default=False)),
                ("bucket_hit", models.BooleanField(default=False)),
                ("inaccessible_bug", models.BooleanField(default=False)),
                (
                    "bucketsWatching",
                    models.ManyToManyField(
                        through="reportmanager.BucketWatch", to="reportmanager.bucket"
                    ),
                ),
                ("defaultToolsFilter", models.ManyToManyField(to="reportmanager.tool")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "view_reportmanager",
                        "Can see ReportManager app (required for reportmanager_* "
                        "perms)",
                    ),
                    ("reportmanager_all", "Full access to ReportManager"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ReportHit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lastUpdate", models.DateTimeField(default=django.utils.timezone.now)),
                ("count", models.BigIntegerField(default=0)),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.tool",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReportEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("rawStdout", models.TextField(blank=True)),
                ("rawStderr", models.TextField(blank=True)),
                ("rawReportData", models.TextField(blank=True)),
                ("metadata", models.TextField(blank=True)),
                ("env", models.TextField(blank=True)),
                ("args", models.TextField(blank=True)),
                ("reportAddress", models.CharField(blank=True, max_length=255)),
                ("reportAddressNumeric", models.BigIntegerField(blank=True, null=True)),
                ("shortSignature", models.CharField(blank=True, max_length=255)),
                ("cachedReportInfo", models.TextField(blank=True, null=True)),
                ("triagedOnce", models.BooleanField(default=False)),
                (
                    "bucket",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.bucket",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.client",
                    ),
                ),
                (
                    "os",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.os",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.platform",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.product",
                    ),
                ),
                (
                    "testcase",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.testcase",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reportmanager.tool",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                fields=("name", "version"), name="unique_product_version"
            ),
        ),
        migrations.AddConstraint(
            model_name="os",
            constraint=models.UniqueConstraint(
                fields=("name", "version"), name="unique_os_version"
            ),
        ),
        migrations.AddField(
            model_name="bug",
            name="externalType",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.bugprovider",
            ),
        ),
        migrations.AddField(
            model_name="bucketwatch",
            name="bucket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.bucket"
            ),
        ),
        migrations.AddField(
            model_name="bucketwatch",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.user"
            ),
        ),
        migrations.AddField(
            model_name="buckethit",
            name="bucket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.bucket"
            ),
        ),
        migrations.AddField(
            model_name="buckethit",
            name="tool",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.tool"
            ),
        ),
        migrations.AddField(
            model_name="bucket",
            name="bug",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.bug",
            ),
        ),
        migrations.AddConstraint(
            model_name="reporthit",
            constraint=models.UniqueConstraint(
                fields=("lastUpdate", "tool"), name="unique_reporthits_per_tool"
            ),
        ),
    ]
