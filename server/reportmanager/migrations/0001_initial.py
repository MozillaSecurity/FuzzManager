# Generated by Django 4.2.13 on 2024-09-18 01:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
from django.conf import settings
from django.db import migrations, models

import reportmanager.models


class Migration(migrations.Migration):
    initial = True

    dependencies = (migrations.swappable_dependency(settings.AUTH_USER_MODEL),)

    operations = (
        migrations.CreateModel(
            name="App",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("channel", models.CharField(max_length=63, null=True)),
                ("name", models.CharField(max_length=63)),
                ("version", models.CharField(max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name="BreakageCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=63, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Bucket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(-2),
                            django.core.validators.MaxValueValidator(2),
                        ],
                    ),
                ),
                ("signature", models.TextField()),
                ("snooze_until", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="BucketColor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "value",
                    models.IntegerField(
                        unique=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(16777215),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BucketHit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "begin",
                    models.DateTimeField(
                        default=reportmanager.models.buckethit_default_range_begin
                    ),
                ),
                ("count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Bug",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("closed", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="BugProvider",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classname", models.CharField(max_length=255)),
                ("hostname", models.CharField(max_length=255)),
                ("url_template", models.CharField(max_length=1023)),
            ],
        ),
        migrations.CreateModel(
            name="BugzillaTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mode",
                    enumfields.fields.EnumField(
                        enum=reportmanager.models.BugzillaTemplateMode, max_length=30
                    ),
                ),
                ("name", models.TextField()),
                ("product", models.TextField()),
                ("component", models.TextField()),
                ("summary", models.TextField(blank=True)),
                ("version", models.TextField()),
                ("description", models.TextField(blank=True)),
                ("whiteboard", models.TextField(blank=True)),
                ("keywords", models.TextField(blank=True)),
                ("op_sys", models.TextField(blank=True)),
                ("platform", models.TextField(blank=True)),
                ("priority", models.TextField(blank=True)),
                ("severity", models.TextField(blank=True)),
                ("alias", models.TextField(blank=True)),
                ("cc", models.TextField(blank=True)),
                ("assigned_to", models.TextField(blank=True)),
                ("qa_contact", models.TextField(blank=True)),
                ("target_milestone", models.TextField(blank=True)),
                ("attrs", models.TextField(blank=True)),
                ("security", models.BooleanField(default=False)),
                ("security_group", models.TextField(blank=True)),
                ("comment", models.TextField(blank=True)),
                ("blocks", models.TextField(blank=True)),
                ("dependson", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="OS",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ReportEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comments", models.CharField(max_length=4095)),
                ("details", models.JSONField()),
                ("reported_at", models.DateTimeField()),
                ("url", models.URLField()),
                ("uuid", models.UUIDField()),
            ],
        ),
        migrations.CreateModel(
            name="ReportHit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_update",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("count", models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("default_template_id", models.IntegerField(default=0)),
                ("default_provider_id", models.IntegerField(default=1)),
                ("bucket_hit", models.BooleanField(default=False)),
                ("inaccessible_bug", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "reportmanager_visible",
                        "Can see ReportManager app (required for reportmanager_* "
                        "perms)",
                    ),
                    ("reportmanager_write", "Write access to ReportManager"),
                    ("reportmanager_read", "Read access to ReportManager"),
                ),
            },
        ),
        migrations.AddConstraint(
            model_name="reporthit",
            constraint=models.UniqueConstraint(
                fields=("last_update",), name="unique_reporthits"
            ),
        ),
        migrations.AddField(
            model_name="reportentry",
            name="app",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.app"
            ),
        ),
        migrations.AddField(
            model_name="reportentry",
            name="breakage_category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.breakagecategory",
            ),
        ),
        migrations.AddField(
            model_name="reportentry",
            name="bucket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.bucket"
            ),
        ),
        migrations.AddField(
            model_name="reportentry",
            name="os",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.os"
            ),
        ),
        migrations.AddField(
            model_name="bug",
            name="external_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.bugprovider",
            ),
        ),
        migrations.AddField(
            model_name="buckethit",
            name="bucket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="reportmanager.bucket"
            ),
        ),
        migrations.AddConstraint(
            model_name="bucketcolor",
            constraint=models.CheckConstraint(
                check=models.Q(("value__gte", 0), ("value__lte", 16777215)),
                name="value_range",
            ),
        ),
        migrations.AddField(
            model_name="bucket",
            name="bug",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.bug",
            ),
        ),
        migrations.AddField(
            model_name="bucket",
            name="color",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="reportmanager.bucketcolor",
            ),
        ),
        migrations.AddConstraint(
            model_name="app",
            constraint=models.UniqueConstraint(
                fields=("channel", "name", "version"), name="unique_app"
            ),
        ),
        migrations.AddConstraint(
            model_name="bucket",
            constraint=models.CheckConstraint(
                check=models.Q(("priority__gte", -2), ("priority__lte", 2)),
                name="priority_range",
            ),
        ),
    )
