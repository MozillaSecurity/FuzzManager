[tox]
envlist = py{37,38,39,310}
minversion = 3.2
tox_pip_extensions_ext_venv_update = true
skip_missing_interpreters = true

[testenv]
extras =
    server
    taskmanager
    test
usedevelop = true
commands = pytest -v --cov="{toxinidir}" --cov-report term-missing {posargs}
install_command = python -m pip install -c "{toxinidir}/requirements.txt" {opts} {packages}
passenv =
    TOXENV
    CI
    TRAVIS
    TRAVIS_*
    CODECOV_*
    TWINE_*

[testenv:py37]
extras =
    test

[testenv:py311]
extras =
    test

[testenv:update-reqs]
skip_install = true
basepython = python3.8
deps =
    pip-tools
install_command = python -m pip install {opts} {packages}
commands =
    pip-compile --extra docker --extra server --extra test -P mozillapulse --strip-extras -q

[testenv:codecov]
skip_install = true
deps =
    codecov
    coverage[toml]
commands =
    codecov

[testenv:mypy]
whitelist_externals = sed
commands =
    sed -i -e 's/    "ec2spotmanager",/    # "ec2spotmanager",/' \
           -e 's/    "crashmanager",/    # "crashmanager",/' \
           -e 's/    "taskmanager",/    # "taskmanager",/' \
           -e 's/    "covmanager",/    # "covmanager",/'  server/server/settings.py
    # Ensure server/settings.py has its changes above reverted in the event of failure
    python -c 'import argparse,subprocess,sys ; \
        parser = argparse.ArgumentParser() ; \
        parser.add_argument("-p", "--posargs"); \
        p_mypy = subprocess.run(["mypy", \
            "--explicit-package-bases", "--install-types", "--non-interactive", \
            parser.parse_args().posargs, \
        ]); \
        subprocess.run(["sed", "-i", \
            ("s/    # \\\"ec2spotmanager\\\",/    \\\"ec2spotmanager\\\",/;" \
             "s/    # \\\"crashmanager\\\",/    \\\"crashmanager\\\",/;" \
             "s/    # \\\"taskmanager\\\",/    \\\"taskmanager\\\",/;" \
             "s/    # \\\"covmanager\\\",/    \\\"covmanager\\\",/;"), \
            "server/server/settings.py", \
        ]); \
        sys.exit(p_mypy.returncode);' -p {posargs}
setenv = PYTHONPATH = {toxinidir}/server
deps =
    boto3-stubs>=1.26.64
    celery-types>=0.14.0
    django-stubs>=1.14.0
    djangorestframework-stubs>=1.8.0
    ffpuppet~=0.9.2
    mypy==1.0.0
    typing-extensions>=4.4.0
usedevelop = true

[testenv:pypi]
skip_install = true
deps =
    twine
    setuptools>=43
    setuptools_scm[toml]>=3.4
    wheel
commands =
    python setup.py sdist bdist_wheel
    bash repack_wheel.sh
    twine upload --skip-existing dist/*
whitelist_externals = bash

[flake8]
# E203, W503, and W504 are all black compat
ignore =
    E203
    W503
enable =
    W504
max-line-length = 88
show-source = true
