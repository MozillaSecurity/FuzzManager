# Generated by Django 4.2.13 on 2025-03-07 12:58

import django.db.models.deletion
from django.db import migrations, models


def add_default_ip_restrictions(apps, schema_editor):
    """
    Add default "allow all" IP restrictions to all existing tokens.
    """
    Token = apps.get_model("authtoken", "Token")
    TokenIPRestriction = apps.get_model("server", "TokenIPRestriction")

    for token in Token.objects.all():
        if not TokenIPRestriction.objects.filter(token=token).exists():
            TokenIPRestriction.objects.create(token=token, ip_range="0.0.0.0/0")
            TokenIPRestriction.objects.create(token=token, ip_range="::/0")


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authtoken", "0004_alter_tokenproxy_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="TokenIPRestriction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_range", models.CharField(max_length=50)),
                (
                    "token",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ip_restrictions",
                        to="authtoken.token",
                    ),
                ),
            ],
            options={
                "unique_together": {("token", "ip_range")},
            },
        ),
        migrations.RunPython(
            add_default_ip_restrictions, reverse_code=migrations.RunPython.noop
        ),
    ]
